/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class MyTracker_Calibration */

#ifndef _Included_MyTracker_Calibration
#define _Included_MyTracker_Calibration
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CalibrationS6
 * Signature: ([D[D[D[D[D[D[D[I[Z[DD[D)V
 */
JNIEXPORT void JNICALL Java_MyTracker_Calibration_DLL_1CalibrationS6
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jintArray, jbooleanArray, jdoubleArray, jdouble, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CheckPosePosError
 * Signature: ([D[DI[D[D[D[I[Z[D[D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_MyTracker_Calibration_DLL_1CheckPosePosError
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jint, jdoubleArray, jdoubleArray, jdoubleArray, jintArray, jbooleanArray, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CheckLineError
 * Signature: ([DI[DI)Z
 */
JNIEXPORT jboolean JNICALL Java_MyTracker_Calibration_DLL_1CheckLineError
  (JNIEnv *, jobject, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CalcRotationZY
 * Signature: ([D[D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_MyTracker_Calibration_DLL_1CalcRotationZY
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CalcPointAfterRotationZY
 * Signature: ([D[D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_MyTracker_Calibration_DLL_1CalcPointAfterRotationZY
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_Joints2Base
 * Signature: ([D[D[D[D[D[D[D[D)V
 */
JNIEXPORT void JNICALL Java_MyTracker_Calibration_DLL_1Joints2Base
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_Version
 * Signature: ()[C
 */
JNIEXPORT jcharArray JNICALL Java_MyTracker_Calibration_DLL_1Version
  (JNIEnv *, jobject);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CalibrationScara
 * Signature: ([D[D[D[D[D[D[D[D)V
 */
JNIEXPORT void JNICALL Java_MyTracker_Calibration_DLL_1CalibrationScara
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_CheckPosePosErrorScara
 * Signature: ([D[DI[D[D[D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_MyTracker_Calibration_DLL_1CheckPosePosErrorScara
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jint, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_AES
 * Signature: ([C)V
 */
JNIEXPORT void JNICALL Java_MyTracker_Calibration_DLL_1AES
  (JNIEnv *, jobject, jcharArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_Cipher
 * Signature: ([C)[C
 */
JNIEXPORT jcharArray JNICALL Java_MyTracker_Calibration_DLL_1Cipher
  (JNIEnv *, jobject, jcharArray);

/*
 * Class:     MyTracker_Calibration
 * Method:    DLL_InvCipher
 * Signature: ([C)[C
 */
JNIEXPORT jcharArray JNICALL Java_MyTracker_Calibration_DLL_1InvCipher
  (JNIEnv *, jobject, jcharArray);

#ifdef __cplusplus
}
#endif
#endif
